{"version":3,"sources":["components/header.js","components/form.js","components/table.js","components/statDisplay.js","App.js","utils.js","serviceWorker.js","index.js"],"names":["Header","props","className","role","style","marginBottom","href","CalcForm","state","form","data","gender","date","age","weight","feet","inches","hips","waist","neck","activity","lastEntry","this","prevForm","setState","prevProps","prevState","setFormData","InputGroup","Col","Label","htmlFor","id","title","Input","name","type","defaultValue","default","placeholder","min","max","required","RadioGroup","FormGroup","check","value","defaultChecked","checked","Form","onSubmit","handleSubmit","Row","tag","row","React","Component","Table","selectedProduct","statlist","error","Each","item","bmi","bf","tdee","lists","Object","keys","reverse","map","key","Stats","bmiR","bfR","tdeeA","StatCard","Card","body","CardTitle","CardText","stat","about","apiURL","process","App","formitems","statList","bind","setDisplay","fetch","then","response","ok","console","log","Error","statusText","res","json","result","list","isLoaded","event","preventDefault","FormData","target","dataObj","fromEntries","newData","handleDataChange","parseInt","height","toPrecision","bmiRange","g","w","n","ht","h","Log10","X","Math","mCalc","fCalc","findBf","findTdee","Container","fromForm","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uSAaeA,G,MAXA,SAAAC,GACb,OAAQ,gCACN,yBAAKC,UAAU,0CAA0CC,KAAK,aAAaC,MAAO,CAAEC,aAAc,IAChG,yBAAKH,UAAU,iBACb,uBAAGA,UAAU,eAAeI,KAAK,cAAjC,8B,gDCkHOC,E,YAlHb,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,KAAM,GACNC,KAAM,CAAEC,OAAQ,SAAUC,KAAM,aAAcC,IAAK,KAAMC,OAAQ,MAAOC,KAAM,IAAKC,OAAQ,IAAKC,KAAM,KAAMC,MAAO,KAAMC,KAAM,KAAMC,SAAU,UAJrI,E,2EASZ,IAAMC,EAAYC,KAAKrB,MAAMsB,SAAS,GAEtCD,KAAKE,SAAU,CAACf,KAAMY,M,yCAGLI,EAAWC,GACxBJ,KAAKrB,MAAMsB,WAAaE,EAAUF,UACpCD,KAAKK,gB,+BAKC,IAAD,EAE0EL,KAAKd,MAAME,KAApFC,EAFD,EAECA,OAAQC,EAFT,EAESA,KAAMC,EAFf,EAEeA,IAAKC,EAFpB,EAEoBA,OAAQC,EAF5B,EAE4BA,KAAMC,EAFlC,EAEkCA,OAAQC,EAF1C,EAE0CA,KAAMC,EAFhD,EAEgDA,MAAOC,EAFvD,EAEuDA,KAAMC,EAF7D,EAE6DA,SAE9DQ,EAAa,SAAC3B,GAAD,OACjB,kBAAC4B,EAAA,EAAD,CAAK3B,UAAWD,EAAMC,WACpB,kBAAC4B,EAAA,EAAD,CAAOC,QAAS9B,EAAM+B,IAAK/B,EAAMgC,MAC/B,kBAACC,EAAA,EAAD,CAAOF,GAAI/B,EAAM+B,GAAIG,KAAMlC,EAAM+B,GAAII,KAAMnC,EAAMmC,KAAMC,aAAcpC,EAAMqC,QAASC,YAAatC,EAAMsC,YAAaC,IAAKvC,EAAMuC,IAAKC,IAAKxC,EAAMwC,IAAKC,UAAQ,OAK5JC,EAAa,SAAC1C,GAAD,OACjB,kBAAC2C,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACf,EAAA,EAAD,CAAOC,QAAS9B,EAAM+B,GAAIa,OAAK,GAC7B,kBAACX,EAAA,EAAD,CAAOF,GAAI/B,EAAM+B,GAAIG,KAAMlC,EAAMkC,KAAMC,KAAK,QAAQU,MAAO7C,EAAM6C,MAC/DC,eAAgB9C,EAAM+C,QAASN,UAAQ,IAAI,IAC5CzC,EAAMgC,SAMb,OACI,kBAACJ,EAAA,EAAD,CAAK3B,UAAU,YACb,gCACE,kDAEF,6BAED,kBAAC+C,EAAA,EAAD,CAAMC,SAAU5B,KAAKrB,MAAMkD,cAExB,kBAACC,EAAA,EAAD,CAAK3C,MAAI,GACP,kBAACoB,EAAA,EAAD,KACE,kBAACe,EAAA,EAAD,CAAWS,IAAI,WAAWC,KAAG,GAC3B,4BAAQpD,UAAU,2BAAlB,UACA,kBAACyC,EAAD,CAAYX,GAAG,SAASC,MAAM,SAASE,KAAK,SAASW,MAAM,SAASE,QAAoB,WAAXrC,IAC7E,kBAACgC,EAAD,CAAYX,GAAG,OAAOC,MAAM,OAAOE,KAAK,SAASW,MAAM,OAAOE,QAAoB,SAAXrC,MAI3E,kBAACiB,EAAD,CAAYI,GAAG,OAAOI,KAAK,OAAOE,QAAS1B,KAG7C,kBAACwC,EAAA,EAAD,CAAK3C,MAAI,GACP,kBAACmB,EAAD,CAAYI,GAAG,MAAMC,MAAM,MAAMG,KAAK,SAASI,IAAI,KAAKC,IAAI,KAAKH,QAASzB,IAC1E,kBAACe,EAAD,CAAYI,GAAG,SAASC,MAAM,SAASG,KAAK,SAASI,IAAI,KAAKC,IAAI,MAAMH,QAASxB,KAGnF,kBAAC8B,EAAA,EAAD,KACE,kBAACd,EAAA,EAAD,CAAOC,QAAQ,UAAf,WAEA,kBAACqB,EAAA,EAAD,CAAK3C,MAAI,GACP,kBAACmB,EAAD,CAAYI,GAAG,OAAO9B,UAAU,YAAYqC,YAAY,OAAOH,KAAK,SAASI,IAAI,IAAIC,IAAI,IAAIH,QAASvB,IACtG,kBAACa,EAAD,CAAYI,GAAG,SAAS9B,UAAU,YAAYqC,YAAY,SAASH,KAAK,SAASI,IAAI,IAAIC,IAAI,KAAKH,QAAStB,MAI/G,6BACA,kBAAC4B,EAAA,EAAD,KAEE,kBAACd,EAAA,EAAD,CAAOC,QAAQ,eAAe7B,UAAU,aAAxC,yBAEA,kBAACkD,EAAA,EAAD,CAAK3C,MAAI,GACP,kBAACmB,EAAD,CAAYI,GAAG,OAAOC,MAAM,OAAOG,KAAK,SAASE,QAASrB,IAC1D,kBAACW,EAAD,CAAYI,GAAG,QAAQC,MAAM,QAAQG,KAAK,SAASE,QAASpB,IAC5D,kBAACU,EAAD,CAAYI,GAAG,OAAOC,MAAM,OAAOG,KAAK,SAASE,QAASnB,MAI9D,kBAACiC,EAAA,EAAD,CAAK3C,MAAI,GACT,kBAACqB,EAAA,EAAD,CAAOC,QAAQ,WAAW7B,UAAU,aAApC,kBAEE,kBAAC0C,EAAA,EAAD,CAAWS,IAAI,WAAWC,KAAG,GAE3B,kBAACX,EAAD,CAAYX,GAAG,OAAOC,MAAM,OAAOE,KAAK,WAAWW,MAAM,MAAME,QAAsB,QAAb5B,IACxE,kBAACuB,EAAD,CAAYX,GAAG,QAAQC,MAAM,QAAQE,KAAK,WAAWW,MAAM,QAAQE,QAAsB,UAAb5B,IAC5E,kBAACuB,EAAD,CAAYX,GAAG,SAASC,MAAM,SAASE,KAAK,WAAWW,MAAM,OAAOE,QAAsB,SAAb5B,IAC7E,kBAACuB,EAAD,CAAYX,GAAG,QAAQC,MAAM,QAAQE,KAAK,WAAWW,MAAM,QAAQE,QAAsB,UAAb5B,IAC5E,kBAACuB,EAAD,CAAYX,GAAG,QAAQC,MAAM,QAAQE,KAAK,WAAWW,MAAM,MAAME,QAAsB,QAAb5B,MAI9E,oD,GAzGWmC,IAAMC,WCiEdC,E,YAhEX,WAAYxD,GAAQ,IAAD,8BACf,4CAAMA,KACDO,MAAQ,CACTkD,gBAAiB,GACjBC,SAAU,EAAK1D,MAAM0D,SACrBC,MAAO,SALI,E,sEAUT,IAAD,OAWCC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAEL,4BACI,4BAAKA,EAAKlD,MACV,4BAAKkD,EAAKhD,QACV,4BAAKgD,EAAKC,KACV,4BAAKD,EAAKE,IACV,4BAAKF,EAAKG,QAQtB,OACI,6BACI,gCACI,8CAEJ,2BAAO/D,UAAU,kCAAkC8B,GAAG,WAElD,+BACI,4BACI,oCACA,sCACA,+CACA,0CACA,sCAIR,+BACI,kBA3CC,SAAC,GAAD,EAAGkC,MAAH,OAEbC,OAAOC,KAAK,EAAKnE,MAAM0D,UAAUU,UAAUC,IAAI,SAAAC,GAAG,OAC9C,kBAACV,EAAD,CACIU,IAAKA,EACLT,KAAM,EAAK7D,MAAM0D,SAASY,QAsCtB,a,GAvDJhB,IAAMC,W,wBC4CTgB,E,YAzCb,WAAYvE,GAAQ,IAAD,8BACjB,4CAAMA,KACDO,MAAQ,GAFI,E,sEAOT,IAAD,EACuBc,KAAKrB,MAAMS,KAAlCqD,EADA,EACAA,IAAKC,EADL,EACKA,GAAIC,EADT,EACSA,KAAMQ,EADf,EACeA,KADf,EAEgBnD,KAAKrB,MAApByE,EAFD,EAECA,IAAKC,EAFN,EAEMA,MAEPC,EAAW,SAAC3E,GAAD,OACf,kBAAC4E,EAAA,EAAD,CAAMC,MAAI,GACR,kBAACC,EAAA,EAAD,KAAY9E,EAAMgC,OAClB,kBAAC+C,EAAA,EAAD,KAAW/E,EAAMgF,MACjB,kBAACD,EAAA,EAAD,KAAW/E,EAAMiF,SAIrB,OACF,kBAACrD,EAAA,EAAD,CAAK3B,UAAU,aACb,gCACE,2CAEF,6BACA,6BACE,kBAAC0E,EAAD,CAAU3C,MAAM,kBACdgD,KAAMlB,EACNmB,MAAOT,IACT,kBAACG,EAAD,CAAU3C,MAAM,sBACdgD,KAAMjB,EACNkB,MAAOR,IACT,kBAACE,EAAD,CAAU3C,MAAM,iCACdgD,KAAMhB,EACNiB,MAAOP,U,GAnCGpB,IAAMC,W,YCIpB2B,EAAO,GAAD,OAAIC,2DAgJDC,E,YA7Ib,WAAYpF,GAAQ,IAAD,8BACjB,4CAAMA,KAEDO,MAAQ,CACX8E,UAAW,GACXC,SAAU,CAAI,CACZ,GAAM,EACN,KAAQ,YACR,IAAO,KACP,GAAM,KACN,OAAU,MACV,KAAQ,SAEV9E,KAAM,GACNwD,KAAK,GACLU,MAAO,WACPZ,IAAI,GACJU,KAAM,GACNT,GAAG,GACHU,IAAI,UACJd,MAAO,SAET,EAAKT,aAAe,EAAKA,aAAaqC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAvBD,E,gFA2BC,IAAD,OAUjBE,MAAM,GAAD,OAAIP,EAAJ,uBAAgCQ,KATrC,SAAsBC,GACpB,IAAKA,EAASC,GAEZ,MADAC,QAAQC,IAAI,aACNC,MAAMJ,EAASK,YAGvB,OADAH,QAAQC,IAAI,QACLH,IAG+CD,KAAK,SAAAO,GAAG,OAAIA,EAAIC,SAAQR,KAAK,SAAAS,GACnF,EAAK5E,SAAS,CAAC6E,KAAMD,EAAQE,UAAU,EAAM1C,MAAO,MACnD,SAAAA,GACD,EAAKpC,SAAS,CAACoC,MAAO,qC,mCAKb2C,GACXA,EAAMC,iBACNV,QAAQC,IAAI,gBACZ,IAAMrF,EAAO,IAAI+F,SAASF,EAAMG,QAC1BC,EAAUxC,OAAOyC,YAAYlG,GAE7BmG,EAAUvF,KAAKmE,WAAWkB,GAGhCrF,KAAKE,SAAS,CACZ8D,UAAWuB,EACXtB,SAAS,GAAD,mBAAMjE,KAAKd,MAAM+E,UAAjB,CAA2BsB,Q,0CAMrCf,QAAQC,IAAI,aACZzE,KAAKwF,qB,iCAIIpG,GACToF,QAAQC,IAAI,qBADG,IAGVpF,EAAkED,EAAlEC,OAAQE,EAA0DH,EAA1DG,IAAKE,EAAqDL,EAArDK,KAAMC,EAA+CN,EAA/CM,OAAQE,EAAuCR,EAAvCQ,MAAOJ,EAAgCJ,EAAhCI,OAAQK,EAAwBT,EAAxBS,KAAMF,EAAkBP,EAAlBO,KAAMG,EAAYV,EAAZU,SAC3DF,EAAQ6F,SAAS7F,GACjBC,EAAO4F,SAAS5F,GAChBF,EAAO8F,SAAS9F,GAEhB,IAAI+F,EAAkB,GAAPjG,GADfC,EAAS+F,SAAS/F,IAIZ+C,GAAQjD,GAAUkG,EAAOA,GAAW,KAAKC,YAAY,GACrDxC,EChFD,SAAkBV,GACvB,OAAQA,EAAM,KAAqB,cAC3BA,GAAO,MAAQA,EAAM,GAAM,SAC3BA,GAAO,IAAMA,EAAM,GAAQ,aACA,QD4EtBmD,CAASnD,GAChBC,EC5FF,SAAgBmD,EAAGC,EAAGC,EAAGC,EAAIC,GACjC,IAAMC,EAAQ,SAAAC,GAAC,OAAKC,KAAK3B,IAAI0B,GAAKC,KAAK3B,IAAI,KAEvC4B,EAAU,MAAUH,EAAMJ,EAAIC,GAAQ,OAAUG,EAAMF,GAAQ,MAC9DM,EAAS,QAAUJ,EAAMJ,EAAIG,EAAIF,GAAK,OAASG,EAAMF,GAAM,OAG/D,MADgB,SAANH,EAAgBQ,EAAQC,EDsFvBC,CAAOlH,EAAQO,EAAOC,EAAM6F,EAAQ/F,GAAMgG,YAAY,GAC3DhD,EC1EF,SAAkBtD,EAAQS,EAAUgG,EAAGE,EAAIzG,GAM/C,MADuB,SAAXF,GAHD,GAAM,KAAOyG,EAAM,KAAOE,EAAO,IAAMzG,GAGTO,GAF9B,IAAO,KAAOgG,EAAM,IAAME,EAAO,IAAMzG,GAEWO,EDqEhD0G,CAASnH,EAAQS,EAAUN,EAAQkG,EAAQnG,GAAKoG,YAAY,GAiBzE,OAfAvG,EAAI,GAAOsD,EACXtD,EAAI,IAAQqD,EACZrD,EAAI,KAASuD,EACbvD,EAAI,KAAS+D,EAYN/D,I,yCAGUe,EAAWC,GACxBJ,KAAKrB,MAAMS,OAASe,EAAUf,MAChCY,KAAKmE,e,+BAOP,OACE,yBAAKvF,UAAU,OACb,kBAAC,EAAD,MAEA,6BACA,yBAAKA,UAAU,QACb,6BACA,kBAAC6H,EAAA,EAAD,CAAW7H,UAAU,eACnB,kBAAC,EAAD,CACEqB,SAAUD,KAAKd,MAAM+E,SACrByC,SAAU1G,KAAKd,MAAM8E,UACrBnC,aAAc7B,KAAK6B,eAErB,kBAAC,EAAD,CACEzC,KAAMY,KAAKd,MAAM8E,UACjBX,MAAOrD,KAAKd,MAAMmE,MAClBD,IAAKpD,KAAKd,MAAMkE,OAGpB,6BACA,6BACA,kBAAC,EAAD,CAAOxE,UAAU,YACfyD,SAAUrC,KAAKd,MAAM+E,iB,GArIfhC,IAAMC,WEDJyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjD,KAAK,SAAAkD,GACjCA,EAAaC,iB","file":"static/js/main.cd762850.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = props => {\n  return (<header >\n    <nav className=\"navbar navbar-default navbar-static-top\" role=\"navigation\" style={{ marginBottom: 0 }}>\n      <div className=\"navbar-header\">\n        <a className=\"navbar-brand\" href=\"index.html\">Body Stats Calculator</a>\n      </div>\n    </nav>\n\n  </header>);\n}\n\nexport default Header;","import React from \"react\";\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Row, Col } from 'reactstrap';\n\n\nclass CalcForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      form: \"\",\n      data: { gender: \"female\", date: \"2019-09-11\", age: \"30\", weight: \"135\", feet: \"5\", inches: \"5\", hips: \"36\", waist: \"28\", neck: \"12\", activity: \"1.375\" }\n    };\n  }\n\n  setFormData() {\n    const lastEntry = this.props.prevForm[0];\n    \n    this.setState( {form: lastEntry});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.prevForm !== prevProps.prevForm) {\n      this.setFormData();\n    }\n  }  \n\n\n  render() {\n\n    const { gender, date, age, weight, feet, inches, hips, waist, neck, activity } = this.state.data;\n\n    const InputGroup = (props) => (\n      <Col className={props.className}>\n        <Label htmlFor={props.id}>{props.title}\n          <Input id={props.id} name={props.id} type={props.type} defaultValue={props.default} placeholder={props.placeholder} min={props.min} max={props.max} required />\n        </Label>\n      </Col>\n    );\n\n    const RadioGroup = (props) => (\n      <FormGroup check>\n        <Label htmlFor={props.id} check>\n          <Input id={props.id} name={props.name} type=\"radio\" value={props.value}\n            defaultChecked={props.checked} required />{' '}\n          {props.title}\n        </Label>\n      </FormGroup>\n    );\n\n\n    return (\n        <Col className=\"calcForm\">\n          <header>\n            <h4>Your Measurements</h4>\n          </header>\n          <hr></hr>\n         {/*} <Form onSubmit={this.handleSubmit}> */}\n         <Form onSubmit={this.props.handleSubmit}>\n\n            <Row form>\n              <Col >\n                <FormGroup tag=\"fieldset\" row>\n                  <legend className=\"col-form-label col-sm-2\">Gender</legend>\n                  <RadioGroup id=\"female\" title=\"Female\" name=\"gender\" value=\"female\" checked={gender === 'female'} />\n                  <RadioGroup id=\"male\" title=\"Male\" name=\"gender\" value=\"male\" checked={gender === 'male'} />\n                </FormGroup>\n              </Col>\n\n              <InputGroup id=\"date\" type=\"date\" default={date} />\n            </Row>\n\n            <Row form>\n              <InputGroup id=\"age\" title=\"Age\" type=\"number\" min=\"18\" max=\"99\" default={age} />\n              <InputGroup id=\"weight\" title=\"Weight\" type=\"number\" min=\"85\" max=\"600\" default={weight} />\n            </Row>\n\n            <FormGroup >\n              <Label htmlFor=\"Height\">\n                Height </Label>\n              <Row form>\n                <InputGroup id=\"feet\" className=\"heightRow\" placeholder=\"Feet\" type=\"number\" min=\"4\" max=\"7\" default={feet} />\n                <InputGroup id=\"inches\" className=\"heightRow\" placeholder=\"Inches\" type=\"number\" min=\"0\" max=\"11\" default={inches} />\n              </Row>\n            </FormGroup>\n\n            <hr></hr>\n            <FormGroup >\n\n              <Label htmlFor=\"measurements\" className=\"fieldBold\">\n                Measurements (Inches)</Label>\n              <Row form>\n                <InputGroup id=\"hips\" title=\"Hips\" type=\"number\" default={hips} />\n                <InputGroup id=\"waist\" title=\"Waist\" type=\"number\" default={waist} />\n                <InputGroup id=\"neck\" title=\"Neck\" type=\"number\" default={neck} />\n              </Row>\n            </FormGroup>\n\n            <Row form>\n            <Label htmlFor=\"activity\" className=\"fieldBold\">\n                Activity Level</Label>\n              <FormGroup tag=\"fieldset\" row>\n               \n                <RadioGroup id=\"none\" title=\"None\" name=\"activity\" value=\"1.2\" checked={activity === '1.2'} />\n                <RadioGroup id=\"light\" title=\"Light\" name=\"activity\" value=\"1.375\" checked={activity === '1.375'} />\n                <RadioGroup id=\"normal\" title=\"Normal\" name=\"activity\" value=\"1.55\" checked={activity === '1.55'} />\n                <RadioGroup id=\"extra\" title=\"Extra\" name=\"activity\" value=\"1.725\" checked={activity === '1.725'} />\n                <RadioGroup id=\"heavy\" title=\"Heavy\" name=\"activity\" value=\"1.9\" checked={activity === '1.9'} />\n              </FormGroup>\n\n            </Row>\n            <button>Calculate </button>\n          </Form>\n        </Col>\n\n\n    );\n  }\n}\n\n\nexport default CalcForm;","\n\nimport React from \"react\";\n\n\nclass Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedProduct: {},\n            statlist: this.props.statlist,\n            error: \"error\"\n        };\n    }\n\n\n    render() {\n        const StatList = ({ lists }) => (\n\n            Object.keys(this.props.statlist).reverse().map(key => (\n                <Each\n                    key={key}\n                    item={this.props.statlist[key]}\n                />\n            ))\n        );\n\n        const Each = ({ item }) =>\n            (\n                < tr >\n                    <td>{item.date}</td>\n                    <td>{item.weight}</td>\n                    <td>{item.bmi}</td>\n                    <td>{item.bf}</td>\n                    <td>{item.tdee}</td>\n\n                  {/*  <td> <i className=\"\" type=\"button\" onClick={() => this.clickToRemove(item)}> Delete </i></td> */ }\n\n\n                </tr >\n        );\n\n        return (\n            <div >\n                <header>\n                    <h4>Your Progress</h4>\n                </header>\n                <table className=\"table table-hover table-striped\" id=\"tableId\">\n\n                    <thead>\n                        <tr>\n                            <th>Date</th>\n                            <th>Weight</th>\n                            <th>Body Mass Index</th>\n                            <th>Body Fat %</th>\n                            <th>TDEE</th>\n                            \n                        </tr>\n                    </thead>\n                    <tbody>\n                        <StatList />\n                    </tbody>\n                </table>\n                \n            </div>\n\n        );\n    }\n}\n\nexport default Table;","import React from \"react\";\nimport { Card,  CardTitle, CardText } from 'reactstrap';\nimport {  Col } from 'reactstrap';\n// import { parse } from \"url\";\n\n\n\nclass Stats extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n      };\n      };\n\n  \n    render() {\n      const {bmi, bf, tdee, bmiR} = this.props.data; \n      const { bfR, tdeeA } = this.props;\n\n      const StatCard = (props) =>  (\n        <Card body >\n          <CardTitle>{props.title}</CardTitle>\n          <CardText>{props.stat}</CardText>\n          <CardText>{props.about}</CardText>\n        </Card>\n      );\n      \n      return (\n    <Col className=\"statGroup\">\n      <header>\n        <h4>Your Stats</h4>\n      </header>\n      <hr></hr>\n      <div>\n        <StatCard title=\"Body Mass Index\"\n          stat={bmi}\n          about={bmiR} />\n        <StatCard title=\"Body Fat Percentage\"\n          stat={bf} \n          about={bfR}/>\n        <StatCard title=\"Total Daily Energy Expenditure\"\n          stat={tdee} \n          about={tdeeA}/>\n      </div>\n  </Col>\n      );\n    }\n  }\n  \n  export default Stats;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/header\";\nimport CalcForm from \"./components/form\";\nimport Table from \"./components/table\";\nimport Stats from \"./components/statDisplay\";\nimport { bmiRange, findBf, findTdee } from './utils.js';\nimport { Container} from 'reactstrap';\n{/*import Footer from \"./components/footer\";\nimport Login from \"./components/login\";\nimport Chart from \"./components/chart\"; */}\nconst apiURL=`${process.env.REACT_APP_URL}`\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formitems: '',\n      statList: [   {\n        'id': 1,\n        'date': 'MonthYear',\n        'bmi': '23',\n        'bf': '21',\n        'weight': '125',\n        'tdee': '1800'\n      }],\n      form: \"\",\n      tdee:\"\",\n      tdeeA: \"Calories\",\n      bmi:\"\",\n      bmiR: \"\",\n      bf:\"\",\n      bfR:'Percent',\n      error: \"error\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setDisplay = this.setDisplay.bind(this);\n  }\n\n\n  handleDataChange() {\n    function handleErrors(response) {\n      if (!response.ok) {\n        console.log(\"Error!!!!\");\n        throw Error(response.statusText);\n      }\n      console.log(\"okay\");\n      return response;\n    }\n\n    fetch(`${apiURL}dev/api/user/stats`).then(handleErrors).then(res => res.json()).then(result => {\n      this.setState({list: result, isLoaded: true, error: \"\"});\n    }, error => {\n      this.setState({error: \"Please input valid search...\"});\n    });\n  }\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"handleSubmit\");\n    const data = new FormData(event.target);\n    const dataObj = Object.fromEntries(data);\n    // const stringdata = JSON.stringify(dataObj, null, 2);\n    const newData = this.setDisplay(dataObj);\n    // console.log(newData);\n\n    this.setState({\n      formitems: newData,\n      statList: [...this.state.statList, newData]\n    });\n   \n  }\n\n  componentDidMount() {\n    console.log(\"Did Mount\");\n    this.handleDataChange();\n  }\n\n\n  setDisplay(data) {\n    console.log(\"setDisplay,  data\");\n\n    let {gender, age, feet, inches, waist, weight, neck, hips, activity} = data;\n    waist = parseInt(waist);\n    neck = parseInt(neck);\n    hips = parseInt(hips);\n    inches = parseInt(inches);\n    let height = ((feet * 12) + inches);\n   \n    // bmi = Body Mass Index;  bf = Body Fat Percentage; tdee = Total Daily Energy Expenditure\n    const bmi = ((weight / (height*height)) * 703).toPrecision(3);\n    const bmiR = bmiRange(bmi);\n    const bf = findBf(gender, waist, neck, height, hips).toPrecision(3);\n    const tdee = findTdee(gender, activity, weight, height, age).toPrecision(4);\n\n    data[\"bf\"]=bf;\n    data[\"bmi\"]=bmi;\n    data[\"tdee\"]=tdee;\n    data[\"bmiR\"]=bmiR;\n    // console.log(this.state.formitems)\n    // console.log(data)\n\n    // this.setState(\n    //   {\n    //     bf: bf,\n    //     bmi: bmi,\n    //     bmiR: bmiR,\n    //     tdee: tdee\n    //   }\n    // );\n    return(data)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      this.setDisplay();\n    }\n  }\n\n  \n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header />\n        {/*<Login />*/}\n        <br></br>\n        <div className='main'>\n          <hr />\n          <Container className=\"calcAndStat\">\n            <CalcForm\n              prevForm={this.state.statList}\n              fromForm={this.state.formitems}\n              handleSubmit={this.handleSubmit}\n            />\n            <Stats\n              data={this.state.formitems}\n              tdeeA={this.state.tdeeA}\n              bfR={this.state.bfR}\n            />\n          </Container>\n          <hr />\n          <br></br>\n          <Table className=\"container\"\n            statlist={this.state.statList} />\n        </div>\n        {/*}  \n    <Footer />  */}\n      </div>\n    );\n  }\n}\n\nexport default App;","\n\n export function findBf(g, w, n, ht, h) {\n    const Log10 = X => (Math.log(X) / Math.log(10));\n    \n    let mCalc = ((86.010 * (Log10(w - n))) - (70.041 * (Log10(ht))) + 36.76);\n    let fCalc = (163.205 * Log10(w + h - n) - 97.684 * Log10(ht) - 78.387);\n\n    var bf = (g === 'male') ? mCalc : fCalc;\n    return bf\n  };\n\n\n export  function bmiRange(bmi) {\n    return (bmi < 18.5)              ? \"Underweight\"\n          :(bmi >= 18.5 && bmi < 25) ? \"Normal\"\n          :(bmi >= 25 && bmi < 30)   ? \"Overweight\"\n          :                            \"Obese\";\n  };\n\n\n export function findTdee(gender, activity, w, ht, age) {\n    // BMR = Basal Metabolic Rate\n    var mBMR = 66 + (6.23 * w) + (12.7 * ht) - (6.8 * age);\n    var fBMR = 655 + (4.35 * w) + (4.7 * ht) - (4.7 * age);\n\n    var tdee = (gender === \"male\") ? (mBMR * activity) : (fBMR * activity);\n    return tdee\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}